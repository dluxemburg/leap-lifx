#!/usr/bin/env node

const fs = require('fs');
const Leap = require('leapjs');
const max = require('lodash/max');
const min = require('lodash/min');

let extremes = [[0,0], [0,0], [0,0]];

let writeCalibration = (() => {
  let lastWrite = Promise.resolve();
  return (payload) => {
    lastWrite = lastWrite.then(() => {
      return new Promise((resolve, reject) => {
        fs.writeFile('.leap-calibration', payload, 'utf-8', (err) => {
          if (err) return reject(err);
          resolve();
        });
      });
    });
  };
})();

Leap.loop(frame => {
  let extremesWere = JSON.stringify(extremes);
  frame.hands.forEach(hand => {
    hand.palmPosition.forEach((v, i) => {
      extremes[i][0] = Math.floor(min([v, extremes[i][0]]));
      extremes[i][1] = Math.ceil(max([v, extremes[i][1]]));
    });
  });
  if (JSON.stringify(extremes) !== extremesWere) {
    process.stdout.write(`${extremes.map(e => e.join(',')).join(' ')}\n`);
    writeCalibration(JSON.stringify(extremes));
  }
});
