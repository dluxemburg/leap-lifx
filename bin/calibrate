#!/usr/bin/env node

const denodeify = require('denodeify');
const fs = require('fs');
const Leap = require('leapjs');
const max = require('lodash/max');
const min = require('lodash/min');

const writeCalibration = (() => {
  let lastWrite = Promise.resolve();
  return (payload) => {
    lastWrite = lastWrite.then(() => {
      return denodeify(fs.writeFile)('.leap-calibration', payload, 'utf-8');
    });
  };
})();

let extremes = [[0,0], [0,0], [0,0]];

Leap.loop(frame => {
  let extremesWere = JSON.stringify(extremes);
  frame.hands.forEach(hand => {
    hand.palmPosition.forEach((v, di) => {
      extremes[di][0] = Math.floor(min([v, extremes[di][0]]));
      extremes[di][1] = Math.ceil(max([v, extremes[di][1]]));
    });
  });
  let extremesAre = JSON.stringify(extremes);
  if (extremesAre !== extremesWere) {
    process.stdout.write(`${extremes.map(e => e.join(',')).join(' ')}\n`);
    writeCalibration(extremesAre);
  }
});
